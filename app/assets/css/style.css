@charset "UTF-8";
:root {
  --color-white: #fff;
  --color-black: #000;
  --color-red: #fa4a4a;
  --color-blue: #202f55;
  --color-grey-10: rgba(0,0,0, .05);
  --color-grey-20: rgba(0,0,0, .1);
  --color-grey-30: rgba(0,0,0, .27);
  --color-grey-40: rgba(0,0,0, .4);
  --color-grey-50: rgba(0,0,0, .57);
  --color-lightgrey-10: #f9f9f9;
  --color-lightgrey-20: #e5e7ea;
  --color-orange: #d35400;
  --color-green: #27ae60;
  --color-purple-300: #bfA9f2;
  --color-purple-400: #9474dd;
  --color-purple-500: #7A57d1;
  --color-purple-600: #6032c3;
  --color-purple-700: #4300b3;
  --color-yellow: #f1c40f;
  --color-primary: var(--color-purple-600);
  --color-error: var(--color-red);
  --color-success: var(--color-green); }

.icon--facebook {
  color: #3b5998; }

.icon--twitter {
  color: #43bfe1; }

.icon--dribbble {
  color: #ea4c89; }

.icon--github {
  color: #171515; }

.icon--google {
  color: #db4437; }

.icon--youtube {
  color: #c4302b; }

.icon--linkedin {
  color: #3272bd; }

:root {
  --border-radius: 4px;
  --border-width: 1px;
  --base-padding: 1rem;
  --box-shadow-screen: 0px 64px 80px -24px rgba(0,0,0,0.24);
  --button-height: 2.8125rem;
  --max-content-width: 90rem;
  --header--main-height: 3rem;
  --padding-media: 1rem;
  --nav--main-height: 4rem;
  --input-height: 3rem;
  --single-form-width--tablet: 18rem;
  --single-form-width--desktop: 30rem; }

:root {
  --z-index-1: 10; }

/* stylelint-disable */
/* stylelint-enable */
/* stylelint-disable */
/* stylelint-enable */
/* stylelint-disable */
/* stylelint-enable */
:root {
  --Gotham-Light: 'GothamLight', sans-serif;
  --Gotham-Book: 'GothamBook', sans-serif;
  --Gotham-Black: 'GothamBlack', sans-serif;
  --font-primary: var(--Gotham-Light); }

body::before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: inherit;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100; }
  @media (min-width: 15.625em) {
    body::before {
      content: "mobile ≥ 250px (15.625em)"; } }
  @media (min-width: 30em) {
    body::before {
      content: "mobileLandscape ≥ 480px (30em)"; } }
  @media (min-width: 46.25em) {
    body::before {
      content: "tablet ≥ 740px (46.25em)"; } }
  @media (min-width: 61.25em) {
    body::before {
      content: "desktop ≥ 980px (61.25em)"; } }
  @media (min-width: 81.25em) {
    body::before {
      content: "wide ≥ 1300px (81.25em)"; } }

.u-no-scroll {
  overflow: hidden !important; }

.u-max-content-width {
  max-width: var(--max-content-width) !important; }

.u-hide {
  display: none !important;
  visibility: hidden !important; }

.u-text-uppercase {
  text-transform: uppercase !important; }

.u-text-bold {
  font-weight: bold !important; }

.u-text-italic {
  font-style: italic !important; }

.u-text-left-align {
  text-align: left !important; }

.u-text-centered {
  text-align: center !important; }

.u-text-right-align {
  text-align: right !important; }

.u-text-justify {
  text-align: justify !important; }

.u-text-red {
  color: var(--color-red) !important; }

.u-text-blue {
  color: var(--color-blue) !important; }

.u-text-yellow {
  color: var(--color-yellow) !important; }

.u-text-green {
  color: var(--color-green) !important; }

.u-text-orange {
  color: var(--color-orange) !important; }

.u-text-purple {
  color: var(--color-purple-600) !important; }

.u-text-grey {
  color: var(--color-grey-30) !important; }

.u-text-black {
  color: var(--color-black) !important; }

.u-list-default {
  margin-left: 1rem !important; }

.u-list-reset {
  list-style: none !important;
  padding-left: 0 !important; }

.u-mb1 {
  margin-bottom: 1rem !important; }

.u-mb2 {
  margin-bottom: 2rem !important; }

.u-mt1 {
  margin-top: 1rem !important; }

.u-mt2 {
  margin-top: 2rem !important; }

.u-coma-sep-items > li:not(:last-child)::after {
  content: ','; }

.u-baseline::after {
  background: repeating-linear-gradient(0deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.05) 24px, rgba(0, 0, 0, 0.1) 24px, rgba(0, 0, 0, 0.1) 48px);
  content: '';
  position: absolute;
  display: block;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.u-visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  border: 0 !important;
  overflow: hidden !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px) !important; }

.u-full-width {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw; }

/* stylelint-disable */
/* stylelint-enable */
/* stylelint-disable */
/*
 * Normalization
 */
audio:not([controls]) {
  display: none; }

button {
  overflow: visible;
  -webkit-appearance: button; }

details {
  display: block; }

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

input {
  -webkit-border-radius: 0; }
  input[type="button"], input[type="reset"], input[type="submit"] {
    -webkit-appearance: button; }
  input[type="number"] {
    width: auto; }
  input[type="search"] {
    -webkit-appearance: textfield; }
    input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
      -webkit-appearance: none; }

main {
  display: block; }

pre {
  overflow: auto; }

progress {
  display: inline-block; }

small {
  font-size: 75%; }

summary {
  display: block; }

svg:not(:root) {
  overflow: hidden; }

template {
  display: none; }

textarea {
  overflow: auto; }

[hidden] {
  display: none; }

/*
 * Universal inheritance
 */
*,
::before,
::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

* {
  font-size: inherit;
  line-height: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

/*
 * Opinionated defaults
 */
* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0; }

*,
::before,
::after {
  border-style: solid;
  border-width: 0; }

:root {
  background-color: #FFF;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: #000;
  cursor: default;
  font: 100%/1.5 sans-serif;
  text-rendering: optimizeLegibility; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

button,
input,
select,
textarea {
  background-color: transparent; }

button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit; }

button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

nav ol,
nav ul {
  list-style: none; }

select {
  -moz-appearance: none;
  -webkit-appearance: none; }
  select::-ms-expand {
    display: none; }
  select::-ms-value {
    color: currentColor; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  resize: vertical; }

::-moz-selection {
  background-color: #B3D4FC;
  color: #FFF;
  text-shadow: none; }

::selection {
  background-color: #B3D4FC;
  color: #FFF;
  text-shadow: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden="false"]:focus {
    clip: auto; }

/* stylelint-enable */
/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */
html {
  overflow-y: scroll;
  /* [1] */
  min-height: 100vh;
  /* [2] */
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  /* [3] */
  font-family: var(--font-primary), serif;
  font-size: 100%;
  font-weight: 400;
  margin: 0 auto;
  text-align: left;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body,
html {
  width: 100%;
  margin: 0;
  padding: 0;
  color: var(--color-black); }

body {
  font-size: 1em;
  position: relative;
  font-family: var(--font-primary); }
  @media screen and (min-width: 46.25em) {
    body {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    body {
      font-size: 1em; } }
  body.build-prod::before {
    display: none !important; }

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.2;
  -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s; }

h1 {
  font-size: 2.0625em; }
  @media screen and (min-width: 46.25em) {
    h1 {
      font-size: 2.4375em; } }
  @media screen and (min-width: 61.25em) {
    h1 {
      font-size: 3.1875em; } }

h2 {
  font-size: 1.75em; }
  @media screen and (min-width: 46.25em) {
    h2 {
      font-size: 1.9375em; } }
  @media screen and (min-width: 61.25em) {
    h2 {
      font-size: 2.375em; } }

h3 {
  font-size: 1.4375em; }
  @media screen and (min-width: 46.25em) {
    h3 {
      font-size: 1.5625em; } }
  @media screen and (min-width: 61.25em) {
    h3 {
      font-size: 1.75em; } }

h4 {
  font-size: 1.1875em; }
  @media screen and (min-width: 46.25em) {
    h4 {
      font-size: 1.25em; } }
  @media screen and (min-width: 61.25em) {
    h4 {
      font-size: 1.3125em; } }

h5 {
  font-size: 1em; }
  @media screen and (min-width: 46.25em) {
    h5 {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    h5 {
      font-size: 1em; } }

p,
a,
ul,
blockquote,
figcaption {
  font-family: var(--font-primary);
  color: var(--color-grey-50);
  line-height: 1.5; }

img {
  height: auto;
  width: 100%; }

button {
  cursor: pointer; }

a[href^="http"]:empty::before {
  content: attr(href); }

@media print {
  a[href^="/"]::after,
  a[href^="http://"]::after,
  a[href^="https://"]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word; } }

@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation: none !important;
            animation: none !important;
    -webkit-transition: none !important;
    transition: none !important; } }

::-moz-selection {
  background: var(--color-primary);
  color: var(--color-white);
  text-shadow: none; }

::selection {
  background: var(--color-primary);
  color: var(--color-white);
  text-shadow: none; }

/* ==|====================
   Fonts
   ======================= */
@font-face {
  font-family: "GothamBlack";
  src: url("../fonts/Gotham-Black.woff2") format("woff2"), url("../fonts/Gotham-Black.woff") format("woff"), url("../fonts/Gotham-Black.otf") format("opentype"); }

@font-face {
  font-family: "GothamLight";
  src: url("../fonts/Gotham-Light.woff2") format("woff2"), url("../fonts/Gotham-Light.woff") format("woff"), url("../fonts/Gotham-Light.otf") format("opentype"); }

@font-face {
  font-family: "GothamBook";
  src: url("../fonts/Gotham-Book.woff2") format("woff2"), url("../fonts/Gotham-Book.woff") format("woff"), url("../fonts/Gotham-Book.otf") format("opentype"); }

.c-logo {
  width: 7.875rem;
  height: 10.9375rem; }
  .c-logo svg {
    width: 100%;
    height: 100%;
    fill: currentColor; }

.c-logo--small {
  width: 3.43725rem;
  height: 4.5625rem; }

.c-logo--white {
  color: white; }

.c-logo--black {
  color: black; }

.c-logo--no-secondary-text .c-logo__secondary-text {
  display: none; }

.c-button {
  --button-side-padding: 2.5rem;
  position: relative;
  display: inline-block;
  height: var(--button-height);
  border: none;
  padding-right: var(--button-side-padding);
  padding-left: var(--button-side-padding);
  background-color: var(--color-black);
  -webkit-box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1), 0 1px 3px 0 rgba(0, 0, 0, 0.16);
          box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.1), 0 1px 3px 0 rgba(0, 0, 0, 0.16);
  color: var(--color-white);
  text-decoration: none;
  text-transform: uppercase;
  font-size: 14px;
  line-height: var(--button-height);
  font-family: var(--Gotham-Book);
  will-change: color;
  overflow: hidden; }
  .c-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-white);
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
    -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
    transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
    z-index: 0;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }
  .c-button:hover {
    color: var(--color-black); }
    .c-button:hover::before {
      -webkit-transform: none;
              transform: none; }

.c-button--white {
  background-color: var(--color-white);
  color: var(--color-black); }
  .c-button--white::before {
    background-color: var(--color-black); }
  .c-button--white:hover {
    color: var(--color-white); }
    .c-button--white:hover::before {
      -webkit-transform: none;
              transform: none; }

.c-button--icon {
  padding-left: 0;
  padding-right: 0; }

.c-button__text,
.c-button__icon {
  position: relative;
  z-index: var(--z-index-1); }

.c-button:hover .c-button__text {
  color: inherit; }

.c-icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 100%;
  max-height: var(--button-height);
  max-width: var(--button-height); }
  .c-icon svg {
    width: 100%;
    height: 100%;
    fill: currentColor; }

.c-icon--white {
  color: white; }

.c-text {
  text-transform: uppercase; }

.c-text--huge {
  font-family: var(--Gotham-Black);
  font-size: 14.6875rem; }

.c-text--fat {
  font-family: var(--Gotham-Black);
  font-size: 5.8125rem; }

.c-text--big {
  font-family: var(--Gotham-Black);
  font-size: 2.1875rem; }

.c-text--heavy {
  font-family: var(--Gotham-Black);
  font-size: 1.5rem; }

.c-text--booked {
  font-family: var(--Gotham-Book);
  font-size: 1.25rem; }

.c-text--light {
  font-family: var(--Gotham-Light);
  font-size: 0.9375rem; }

.c-separator {
  width: 3.75rem;
  height: 2px;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  background-color: var(--color-black); }

.c-separator--white {
  background-color: var(--color-white); }

.c-list {
  color: var(--color-black);
  line-height: 1; }

.c-list__item + .c-list__item {
  margin-top: 6px; }

/* =======================
   Components / Card
   ======================= */
.c-card-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  overflow-x: auto; }

.c-card {
  --card-width: 27.34375rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  width: var(--card-width);
  height: calc(var(--card-width) * 0.74200913242);
  padding: 1.5625rem;
  color: var(--color-white);
  background-image: url("../img/dior.jpg");
  background-repeat: no-repeat;
  background-size: cover; }
  .c-card + .c-card {
    margin-left: 0.8125rem; }

.c-card--small {
  --card-width: 23.0625rem;
  width: var(--card-width);
  height: calc(var(--card-width) * 0.531165311653);
  background-image: url("../img/monochrome.jpg"); }

.c-card--content-on-bottom {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

:root {
  --vertical-slider-item-height: 3.4375rem;
  --vertical-slider-item-pseudo-element-width: 15px;
  --vertical-slider-item-before-left-offset: 90%; }

.c-vertical-slider {
  position: absolute;
  right: 2rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  font-family: var(--Gotham-Book);
  color: var(--color-white);
  font-size: 1rem;
  line-height: 1; }

.c-vertical-slider__item {
  position: relative; }

.c-vertical-slider__item__content-toggler {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 3rem;
  height: var(--vertical-slider-item-height);
  -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  outline: 0;
  opacity: .7;
  will-change: opacity; }
  .c-vertical-slider__item__content-toggler:hover {
    opacity: 1; }
    .c-vertical-slider__item__content-toggler:hover::before {
      -webkit-transform: translateY(-50%) scaleX(1);
              transform: translateY(-50%) scaleX(1); }
  .c-vertical-slider__item__content-toggler:hover::after, .c-vertical-slider__item__content-toggler.is-active::after {
    -webkit-transform: translateY(calc(6px - 50%)) scaleX(1);
            transform: translateY(calc(6px - 50%)) scaleX(1); }
  .c-vertical-slider__item__content-toggler:hover + .c-vertical-slider__item__content-wrapper {
    opacity: 1; }
    .c-vertical-slider__item__content-toggler:hover + .c-vertical-slider__item__content-wrapper .c-vertical-slider__item__content,
    .c-vertical-slider__item__content-toggler:hover + .c-vertical-slider__item__content-wrapper .c-vertical-slider__item__content-text {
      -webkit-transform: none;
              transform: none; }
    .c-vertical-slider__item__content-toggler:hover + .c-vertical-slider__item__content-wrapper .c-vertical-slider__item__content-text {
      opacity: 1; }
  .c-vertical-slider__item__content-toggler::before, .c-vertical-slider__item__content-toggler::after {
    content: '';
    display: block;
    position: absolute;
    height: 1px;
    width: var(--vertical-slider-item-pseudo-element-width);
    background-color: var(--color-white);
    -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
    transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
    will-change: transform; }
  .c-vertical-slider__item__content-toggler::before {
    top: 50%;
    right: var(--vertical-slider-item-before-left-offset);
    -webkit-transform: translateY(-50%) scaleX(0);
            transform: translateY(-50%) scaleX(0);
    -webkit-transform-origin: right;
            transform-origin: right; }
  .c-vertical-slider__item__content-toggler::after {
    top: 50%;
    left: 85%;
    -webkit-transform: translateY(calc(6px - 50%)) scaleX(0);
            transform: translateY(calc(6px - 50%)) scaleX(0);
    -webkit-transform-origin: left;
            transform-origin: left; }

.c-vertical-slider__item__content-wrapper {
  position: absolute;
  top: 50%;
  right: calc(var(--vertical-slider-item-before-left-offset) + var(--vertical-slider-item-pseudo-element-width));
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  overflow: hidden;
  text-decoration: none; }

.c-vertical-slider__item__content,
.c-vertical-slider__item__content-text {
  -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  will-change: transform; }

.c-vertical-slider__item__content {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  overflow: hidden; }

.c-vertical-slider__item__content-text {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  -webkit-transition-delay: .05s;
          transition-delay: .05s;
  opacity: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
