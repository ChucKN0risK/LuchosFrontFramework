/* =======================
   Components / Buttons
   ======================= */

// This is meant to be applied on a block element 
// which will wrap at least two <button class="btn"> 
// vertically on small resolutons and horizontaly 
// on bigger resolutions.
.btn-wrapper {
  display: block;
  width: 100%;
  max-width: 12.5rem;

  button[class*="btn--"],
  a[class*="btn--"] {
    width: 100%;
    margin-bottom: 1rem;
    margin-right: auto;
    margin-left: auto;
    
    &:last-child {
      margin-bottom: 0;
    }
  }

  @include mq($from: tablet) {
    display: block;
    width: auto;
    max-width: none;
    text-align: center;

    button[class*="btn--"],
    a[class*="btn--"] {
      display: inline-block;
      margin-right: 1.875rem;
      margin-bottom: 0;
      width: auto;

      &:last-child {
        margin-right: 0;
      }
    }
  }
}

html.flex .btn-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;

  .btn {
    margin-bottom: 1rem;
    
    &:last-child {
      margin-bottom: 0;
    }
  }

  @include mq($from: tablet) {
    width: auto;

    .btn {
      margin-right: 1rem;
      margin-bottom: 0;

      &:last-child {
        margin-right: 0;
      }
    }
  }
}

// If you wonder when to use %extend and when to use mixin read this : http://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/
// This module is supposed to be applied on a <a> or a >button> element.
%button {
  display: block;
  padding: 15px 20px 13px;
  max-width: 25rem;
  font-family: $font1;
  @include rms(0);
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  @include transition;
  backface-visibility: hidden;
  cursor: pointer;
}

html.flex %button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: .3rem;
  padding-bottom: .3rem;
  max-width: 25rem;
  font-size: ms(0);
  text-align: center;
  text-decoration: none;
  @include border-radius;
  @include transition;
  backface-visibility: hidden;
  border: 1px solid transparent;
  cursor: pointer;
}

%tiny {
  padding-right: .3rem;
  padding-left: .3rem;
  font-size: ms(-1);
}

%small {
  padding-right: .5rem;
  padding-left: .5rem;
}

%medium {
  padding: .5rem .8rem;
}

%big {
  padding: 1rem 1.2rem;
}

%large {
  padding: 1rem 1.2rem;
  min-width: 15rem;
}

%secondary {
  border-color: $blue;
  color: $blue;

  &:hover {
    background-color: $blue;
    border-color: $blue;
    color: $white;
  }

  &:active {
    transform: scale(1.1);
  }
}

%primary {
  border: none;
  background-color: $red;
  color: $black;

  &:hover {
    color: $black;
    background-color: $blue;
  }

  &:active {
    color: $white;
  }
}

.btn {
  @extend %button;

  &--secondary {
    @extend %button;
    @extend %secondary;
  }

  &--primary {
    @extend %button;
    @extend %primary;
  }

  &--tiny {
    @extend %tiny;
  }

  &--small {
    @extend %small;
  }

  &--medium {
    @extend %medium;
  }

  &--big {
    @extend %big;
  }

  &--large {
    @extend %large;
  }
}

.btn--close {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  @include size(4rem);
  font-size: ms(2);
  cursor: pointer;
}

.btn--icon {
  justify-content: center;

  .btn__text {
    margin-left: .3rem;
  }
}

.btn--icon-rtl {
  justify-content: center;

  .btn__text {
    margin-right: .3rem;
  }
}

@each $social-network,
$social-color in $social-colors {
  .icon-#{$social-network}-with-circle {
    color: $social-color;
  }
  .btn--#{$social-network} {
    background-color: $social-color;
    color: $white;
    font-weight: 200;
  }
}

.btn--facebook {
  @include reset-link($white);
  height: $input-height;
  @include mq($from: desktop) {
    padding-right: 1rem;
    padding-left: 1rem;
  }
}